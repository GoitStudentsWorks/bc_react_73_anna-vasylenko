{"version":3,"file":"LoginPage-DgzPx-BZ.js","sources":["../../src/helpers/loginSchema.js","../../src/components/LoginForm/LoginForm.jsx","../../src/pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const validationSchemaLogin = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters long')\n    .max(12, 'Password cannot exceed 12 characters')\n    .required('Required'),\n});\n","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Icons } from \"../Icons/Icons\";\n\nimport { loginThunk } from \"../../redux/auth/operations\";\nimport { validationSchemaLogin } from \"../../helpers/loginSchema\";\nimport s from \"./LoginForm.module.css\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const onSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(loginThunk({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationSchemaLogin}\n      onSubmit={onSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form className={s.form}>\n          <div className={s.modalEllipse}></div>\n          <div className={s.loginLogo}>\n            <Icons\n              name={\"logo\"}\n              width={27}\n              height={26}\n              className={s.iconLogo}\n            />\n            <p className={s.loginTitle}>Money Guard</p>\n          </div>\n          <label className={s.label}>\n            <div className=\"inputContainerLogo\">\n              <Icons\n                name={\"email\"}\n                width={20}\n                height={16}\n                className={s.iconName}\n              />\n              <Field\n                className={s.loginInput}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n              />\n              <ErrorMessage name=\"email\" component=\"div\" className={s.error} />\n            </div>\n          </label>\n          <label className={s.label}>\n            <div className=\"inputContainerLogo\">\n              <Icons\n                name={\"password\"}\n                width={17}\n                height={17}\n                className={s.iconName}\n              />\n              <Field\n                className={s.loginInput}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={s.error}\n              />\n            </div>\n          </label>\n          <button className={s.but} disabled={isSubmitting} type=\"submit\">\n            Login\n          </button>\n          <Link className={s.link} to=\"/register\">\n            Register\n          </Link>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import { Toaster } from \"react-hot-toast\";\n\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\nimport s from \"./LoginPage.module.css\";\n\nconst LoginPage = () => {\n  return (\n    <div className={s.loginPage}>\n      <LoginForm />\n      <Toaster />\n      <div className={s.ellipse16}></div>\n      <div className={s.ellipse18}></div>\n      <div className={s.ellipse14}></div>\n      <div className={s.ellipse17}></div>\n      <div className={s.ellipse15}></div>\n      <div className={s.ellipse19}></div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["validationSchemaLogin","Yup.object","Yup.string","LoginForm","dispatch","useDispatch","onSubmit","email","password","resetForm","loginThunk","jsx","Formik","isSubmitting","Form","s","jsxs","Icons","Field","ErrorMessage","Link","LoginPage","Toaster"],"mappings":"yQAEO,MAAMA,EAAwBC,EAAW,CAC9C,MAAOC,EAAU,EAAG,MAAM,uBAAuB,EAAE,SAAS,UAAU,EACtE,SAAUA,EAAY,EACnB,IAAI,EAAG,6CAA6C,EACpD,IAAI,GAAI,sCAAsC,EAC9C,SAAS,UAAU,CACxB,CAAC,ucCEKC,EAAY,IAAM,CACtB,MAAMC,EAAWC,IACXC,EAAW,CAAC,CAAE,MAAAC,EAAO,SAAAC,CAAY,EAAA,CAAE,UAAAC,KAAgB,CACvDL,EAASM,EAAW,CAAE,MAAAH,EAAO,SAAAC,CAAA,CAAU,CAAC,EAC9BC,GAAA,EAIV,OAAAE,EAAA,IAACC,EAAA,CACC,cAAe,CACb,MAAO,GACP,SAAU,EACZ,EACA,iBAAkBZ,EAClB,SAAAM,EAEC,SAAA,CAAC,CAAE,aAAAO,CAAa,WACdC,EAAK,CAAA,UAAWC,EAAE,KACjB,SAAA,CAACJ,EAAAA,IAAA,MAAA,CAAI,UAAWI,EAAE,YAAc,CAAA,EAC/BC,EAAA,KAAA,MAAA,CAAI,UAAWD,EAAE,UAChB,SAAA,CAAAJ,EAAA,IAACM,EAAA,CACC,KAAM,OACN,MAAO,GACP,OAAQ,GACR,UAAWF,EAAE,QAAA,CACf,EACCJ,EAAA,IAAA,IAAA,CAAE,UAAWI,EAAE,WAAY,SAAW,cAAA,CAAA,EACzC,EACAJ,EAAAA,IAAC,SAAM,UAAWI,EAAE,MAClB,SAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAL,EAAA,IAACM,EAAA,CACC,KAAM,QACN,MAAO,GACP,OAAQ,GACR,UAAWF,EAAE,QAAA,CACf,EACAJ,EAAA,IAACO,EAAA,CACC,UAAWH,EAAE,WACb,KAAK,QACL,KAAK,QACL,YAAY,QAAA,CACd,EACAJ,MAACQ,GAAa,KAAK,QAAQ,UAAU,MAAM,UAAWJ,EAAE,MAAO,CAAA,CAAA,CACjE,CACF,CAAA,EACAJ,EAAAA,IAAC,SAAM,UAAWI,EAAE,MAClB,SAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAL,EAAA,IAACM,EAAA,CACC,KAAM,WACN,MAAO,GACP,OAAQ,GACR,UAAWF,EAAE,QAAA,CACf,EACAJ,EAAA,IAACO,EAAA,CACC,UAAWH,EAAE,WACb,KAAK,WACL,KAAK,WACL,YAAY,UAAA,CACd,EACAJ,EAAA,IAACQ,EAAA,CACC,KAAK,WACL,UAAU,MACV,UAAWJ,EAAE,KAAA,CACf,CAAA,CAAA,CACF,CACF,CAAA,EACAJ,EAAAA,IAAC,UAAO,UAAWI,EAAE,IAAK,SAAUF,EAAc,KAAK,SAAS,SAEhE,OAAA,CAAA,QACCO,EAAK,CAAA,UAAWL,EAAE,KAAM,GAAG,YAAY,SAExC,WAAA,CAAA,EACF,CAAA,CAAA,CAIR,oQCjFMM,EAAY,IAEbL,EAAAA,KAAA,MAAA,CAAI,UAAWD,EAAE,UAChB,SAAA,CAAAJ,EAAA,IAACR,EAAU,EAAA,QACVmB,EAAQ,EAAA,EACRX,EAAAA,IAAA,MAAA,CAAI,UAAWI,EAAE,SAAW,CAAA,EAC5BJ,EAAAA,IAAA,MAAA,CAAI,UAAWI,EAAE,SAAW,CAAA,EAC5BJ,EAAAA,IAAA,MAAA,CAAI,UAAWI,EAAE,SAAW,CAAA,EAC5BJ,EAAAA,IAAA,MAAA,CAAI,UAAWI,EAAE,SAAW,CAAA,EAC5BJ,EAAAA,IAAA,MAAA,CAAI,UAAWI,EAAE,SAAW,CAAA,EAC5BJ,EAAAA,IAAA,MAAA,CAAI,UAAWI,EAAE,SAAW,CAAA,CAC/B,CAAA,CAAA"}